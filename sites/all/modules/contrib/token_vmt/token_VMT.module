<?php

// $Id: token_VMT.module,v 1.1.2.2 2009/05/14 16:06:47 greggles Exp $

/**
 * @file
 * The Token API module.
 *
 * The Token module provides an API for providing tokens to other modules.
 * Tokens are small bits of text that can be placed into larger documents
 * via simple placeholders, like %site-name or [user].
 *
 * @ingroup token
 */

/**
 * Implementation of hook_token_list().
 */
function token_VMT_token_list($type = 'all') {
  if ($type == 'node' || $type == 'all') {
    $tokens['node']['menupath-pagetitle']  = t("The menu path (as reflected in the breadcrumb), not including Home or [menu]. Separated by /.  If the menu path is blank, default to the page title");
    $tokens['node']['menupath-pagetitle-raw'] = t("The unfiltered menu path (as reflected in the breadcrumb), not including Home or [menu]. Separated by /.  If the menu path is blank, default to the page title.  WARNING - raw user input.");
  }

  return $tokens;
}

/**
 * Implementation of hook_token_values().
 */
function token_VMT_token_values($type, $object = NULL) {
  $values = array();
  switch ($type) {

    case 'node':

      $node = $object;
      $mlid = db_result(db_query("SELECT mlid FROM {menu_links} WHERE link_path = '%s'", 'node/'. $node->nid));

      // Now get the menu related information.
      if (!empty($mlid) || !empty($node->menu['mlid']) || !empty($node->menu['plid'])) {
        $menu_link = menu_link_load($mlid);
        $menus = menu_get_menus();
        $menu = isset($menus[$menu_link['menu_name']]) ? $menus[$menu_link['menu_name']] : '';
        $trail_raw = _menu_titles($menu_link, $node->nid);

        $trail = array();
        foreach ($trail_raw as $title) {
          $trail[] = check_plain($title);
        }

        $values['menupath-pagetitle']            = implode('/', $trail);
        $values['menupath-pagetitle-raw']        = implode('/', $trail_raw);
      }
      else {

        $values['menupath-pagetitle']            = check_plain($node->title);
        $values['menupath-pagetitle-raw']        = $node->title;
      }

      // Node tokens here.
      break;
  }
  return $values;
}

